function checkUploadButtons(){$("input[name=uploadAnyway]:checked").length>0||$(".goodSets ul li").length>0?$(".buttonContainer").fadeIn():$(".buttonContainer").fadeOut()}function setup_query_condition_validations(e,t){return EXP_INFO=$.parseJSON(t),$("#qc_table_holder").length<1&&$("body").append('<div id="qc_table_holder"><table id="qc_table"></table></div>'),$("#qc_table").length<1&&$("#qc_table_holder").append('<table id="qc_table"></table>'),console.debug(qc_table),validate_query_and_conditions(0,e),!1}function validate_query_and_conditions(e,t){var i=$("#result_fake").contents().find("[name=query\\["+e+"\\]]").val(),n=$("#result_fake").contents().find("[name=condition\\["+e+"\\]]").val(),o=guessConditionInfo(i,n);param_c=o.replace(/\W/,"_"),$.ajax({type:"GET",url:"../experiments/verify_query",data:{query:i,condition:o},dataType:"json",beforeSend:function(){updateFlash("Verifying '"+i+", "+o+"'","Looking for plasmid info...","flashGood"),$("#qc_table").append('<tr><td class="qc_disp">'+i+", "+o+':</td><td><select id="'+i+param_c+'plasmid" class="experiment_pwj_select" name="pwj",'+i+","+param_c+'"></select><input type="hidden" value="'+param_c+'"/></td></tr>')},success:function(a){var s=$("#"+i+param_c+"plasmid"),l="";a.length>1?l="<option value='' disabled='disabled' selected='selected'>Select pWJ:</option>":0==a.length&&(l="<option value='' disabled='disabled' selected='selected' class='invalid_plasmid'>NOT IN DB!</option>");for(var r=0;r<a.length;r++)l+="<option value='"+a[r].id+","+a[r].number+","+i+","+o+","+n+"'>"+a[r].number+" = "+a[r].promoter+"-"+a[r].gene+"</option>";if(s.append(l),e++,t>e)validate_query_and_conditions(e,t);else{var d="Verify query plasmids below:";console.debug($("#qc_table_holder"));var p=$("#qc_table_holder").html(),c='<div class="buttonContainer"><div class="continueButton" onclick="verify_experiment_params()">Continue</div>';c+='<div class="cancelButton" onclick=killFlash();>Cancel</div></div>',p+=c,updateFlash(p,d,"flashInteractive"),$("#qc_table_holder").html("")}},error:function(){updateFlash("A server-side error occurred. Sorry about that.","Error!","flashError")},complete:function(){}})}function verify_experiment_params(){var e=!0;$(".invalid_plasmid").length>0&&(e=!0);var t=$(".experiment_pwj_select");updateFlash(" ","Checking if experiments already exist...","flashGood");for(var i=[],n=0;n<t.length;n++){if(!$(t[n]).val()){e=!1;break}var o=$(t[n]).val().split(",");o[2]==EXP_INFO.comparer&&(EXP_INFO.comparer_pwj=o[1]),i.push({plasmid_id:o[0],query:o[2],pwj:o[1],condition:o[3],original_condition:o[4]})}if(!e)return alert("Could not continue because one or more of your plasmid selections is invalid. Please fix and try again. Fixing may include adding plasmids to the pwj_plasmids table or modifying your log file with proper pWJ numbers."),!1;if(i.length<1)return alert("Could not continue because no plasmid selection boxes were found. Please fix and try again. Fixing may include adding plasmids to the pwj_plasmids table or modifying your log file with proper pWJ numbers."),!1;var a=function(e){display_duplicate_rows(e)},s=new ProcessResponse({numRequest:i.length,singleCallback:a});check_if_experiment_exists(s,i,0)}function display_duplicate_rows(e){var t="",i='<input type="hidden" name="authenticity_token" value="'+$("meta[name=csrf-token]").attr("content")+'" />';i+='<input type="hidden" name="page_num" value="FIRST_PAGE" />';var n=!1,o=0,a="",s="",l="display:none;";$.each(e,function(e,r){var d=r.exp_info.plasmid_id+","+r.exp_info.pwj+","+r.exp_info.query+","+r.exp_info.condition+","+r.exp_info.original_condition;if(r.dups.hasOwnProperty("comments")&&r.dups.comments.match(/not found/i))i+='<input type="hidden" value="'+d+'" name="verified_combo_data['+o+']" />',a+="<li>"+r.exp_info.query+" ("+r.exp_info.pwj+"), "+r.exp_info.condition+"</li>",o++,l="display:block;";else{n=!0;var p=d.replace(/\W/g,"_");s+='<li id="'+p+'_upload_status_li" class="qc_li">'+r.exp_info.query+" ("+r.exp_info.pwj+"), "+r.exp_info.condition+"</li>",t+='<tr><td colspan="10" class="badData qc-combo toggleRowSpan">Query: \''+r.exp_info.query+" ("+r.exp_info.pwj+")'  --  Condition: '"+r.exp_info.condition+"' ",t+=' <br/><small class="badData">click to view </small> ',t+="<br/></td>",t+='<tr class="toggleRow"><td class="toggleTD" colspan="10">',t+='<div class="toggleRowDiv">',t+='<strong>Upload anyway? <input type="checkbox" name="uploadAnyway[]" value="'+d+'" style="display:inline;" /></strong>',t+='<table class="exp ui-widget dupDataTable"><thead class="ui-widget-header">',t+="	<tr>",t+="		<th>Query</th>",t+="		<th>Condition</th>",t+="		<th>Comparer</th>",t+="		<th>Strains / plates</th>",t+="		<th># reps</th>",t+='		<th class="nowrap">Batch date</th>',t+="		<th>Library used</th>",t+="		<th>Donor</th>",t+="		<th>Purpose</th>",t+="		<th>By</th>",t+="	</tr>",t+="</thead>",t+='<tbody class="ui-widget-content">';for(var c=0;c<r.dups.length;c++){var u=r.dups[c].query==r.exp_info.pwj?"match":"noMatch",h="<td class='dupquery "+u+"'>"+r.dups[c].query+"</td>";u=r.dups[c].condition==r.exp_info.condition?"match":"noMatch",h+="<td class='dupcondition "+u+"'>"+r.dups[c].condition+"</td>",u=r.dups[c].comparer==EXP_INFO.comparer_pwj?"match":"noMatch",h+="<td class='dupcomparer "+u+"'>"+r.dups[c].comparer+"</td>";var m=r.dups[c].density/r.dups[c].replicates;u=m==EXP_INFO.density/EXP_INFO.replicates?"match":"",h+="<td class='dupDensity "+u+"'>"+m+"</td>",h+=compareOldToNewJSON("replicates",r.dups[c]),h+=compareOldToNewJSON("batch_date",r.dups[c]),h+=compareOldToNewJSON("library_used",r.dups[c]),h+=compareOldToNewJSON("donor_strain_used",r.dups[c]),h+=compareOldToNewJSON("screen_purpose",r.dups[c]),h+=compareOldToNewJSON("performed_by",r.dups[c]),h+="</tr>",u=0==c%2?"":'class="alt"',t+="<tr "+u+">"+h}t+="</tbody></table></div></td></tr></tr>"}});var r="WARNING! Possible duplicate experiment!";if(n){var d="<div style='text-align:center;'><br/>Current analysis parameters:<br/><ul class='double'><li><strong>Batch data: </strong>"+EXP_INFO.batch_date+"</li>";d+="<li><strong>Performed by: </strong>"+EXP_INFO.performed_by+"</li>",d+="<li><strong>Comparer: </strong>"+EXP_INFO.comparer+"</li>",d+="<li><strong>Density: </strong>"+EXP_INFO.density+"</li>",d+="<li><strong>Replicates: </strong>"+EXP_INFO.replicates+"</li>",d+="<li><strong>Screen type: </strong>"+EXP_INFO.screen_type+"</li>",d+="<li><strong>Screen purpose: </strong>"+EXP_INFO.screen_purpose+"</li>",d+="<li><strong>Donor: </strong>"+EXP_INFO.donor_strain_used+"</li>",d+="<li><strong>Incubation temperature: </strong>"+EXP_INFO.incubation_temperature+"&deg;C</li></ul></div>",d+="<div style='clear:both'><h3>Possible duplicates already in database (fields with same values are highlighted in red):</h3>",t=d+'<table class="exp" id="dup_experiments">'+t+"</table>"}else s="<li class='blankAnnouncement'>Nothing here!</li>",r="All good!",t='<br/>No duplicate experiments detected!<br/>Click "Continue" to proceed with the analysis.';t='<form action="/tools/screen_mill/dr_engine" id="rothstein_exp_param_form" method="post" target="_parent" >'+t,t+='<div class="resultsContainer"><div class="goodSets">Sets to upload:<ul class="triple">'+a+"</ul></div>",t+='<div class="badSets">Sets that will not be uploaded:<ul class="triple">'+s+"</ul></div>",t+='<div style="'+l+'" class="buttonContainer"><div class="continueButton" onclick="verify_submission_params()">Continue</div>',t+='<div class="cancelButton" onclick=killFlash();>Cancel</div></div></div>'+i+"</form>",$("#flashMessageText").fadeOut(function(){updateFlash(t,r,"flashInteractive whiteFlash"),$(this).fadeIn(function(){$(".toggleRowSpan").click(function(){$(this).parent().next().find(".toggleRowDiv:first").slideToggle()}),$("input[name^=uploadAnyway]").change(function(){var e=$(this).val().replace(/\W/g,"_");if($(this).prop("checked")){if(0==$(".goodSets #"+e+"_upload_status_li").length){var t=$(".badSets #"+e+"_upload_status_li"),i=t.prop("id");t.prop("id",""),t.slideUp(),t.clone().appendTo(".goodSets ul").hide().slideDown(function(){$(this).prop("id",i),t.remove(),$(".badSets ul li.qc_li").length<1&&$(".badSets ul").append('<li class="blankAnnouncement">Nothing here!</li>')})}}else if($(".goodSets #"+e+"_upload_status_li").length>0){var t=$(".goodSets #"+e+"_upload_status_li"),i=t.prop("id");t.prop("id",""),t.slideUp(),t.clone().appendTo(".badSets ul").hide().slideDown(function(){$(this).prop("id",i),t.remove()}),$(".badSets ul .blankAnnouncement").remove()}checkUploadButtons()})})})}function verify_submission_params(){window.scrollTo(0,0),$("#rothstein_exp_param_form").submit(),updateFlash("Cool","Entering DR Engine!","flashGood")}function compareOldToNewJSON(e,t){var i=t[e]||"?",n=i==EXP_INFO[e]?"match":"noMatch";return"<td class='dup"+e+" "+n+"'>"+i+"</td>"}function check_if_experiment_exists(e,t,i){$.ajax({type:"GET",url:"../experiments/check_if_experiment_exists",data:{query:t[i].pwj,condition:t[i].condition},dataType:"json",beforeSend:function(){updateFlash("","Checking if experiments already exist...","flashGood")},success:function(n){var o={exp_info:t[i],dups:n};e.setData(i,o),e.requestComplete(!0),i++,i<t.length&&check_if_experiment_exists(e,t,i)},error:function(){alert("Database error looking for duplicate experiments.")}})}function guessConditionInfo(e,t){if(t||0==t||(t=""),t.match(/,/)){conditions=t.split(",");for(var i="",n=0;n<conditions.length;n++)i=i+", "+guessConditionInfo(e,conditions[n].trim());var o=/^\s*,*\s*|\s*,*\s*$/;return i.replace(o,"")}if(void 0!==t&&null!=t){if(t.match(/^[0-9]{1,3}\s*cu$/i)){var a=t.match(/^([0-9]{1,3})\s*cu$/i);return a[1]+"uM Cu"}if(t.match(/^[0-9]{1,3}\s*um$/i)){var a=t.match(/^([0-9]{1,3})\s*um$/i);return a[1]+"uM Cu"}if(t.match(/^gal$/i))return"GAL";if(t.match(/^cu$/i))return"100uM Cu";var o=/^(\d+\.?\d*)(uM|nM|mM|dM|ug|mg|ng|dg|g|m)\s*([a-zA-Z]+)$/i,s=o.exec(t);if(null!=s){var a=s[1],l=s[2].length>1?s[2].charAt(0).toLowerCase()+s[2].toUpperCase().slice(1):s[2],r=s[3].length>1?s[3].charAt(0).toUpperCase()+s[3].toLowerCase().slice(1):s[3];return a+""+l+" "+r}}var d="";for(d=prompt("Could not determine the condition / plasmid promoter for the following experiment:\nQuery: "+e+"\nCondition: '"+t+"'\n\nThe condition should contain 'Cu' if it is the pCup promoter or 'Gal' if it is the GAL promoter. If this experiment involved a plasmid with a pCup promoter, but was plated on media without copper, your input should be '0Cu'.\n\nMultiple conditions should be separated with commas.\n\nChemical formulas with numbers should not be used (i.e. 100uM CuSO4 should be entered as 100uM Cu).\n",t);!d&&0!==d;)d=prompt("Invalid input - this value cannot be blank!\n\nCould not determine the condition / plasmid promoter for the following experiment:\nQuery: "+e+"\nCondition: '"+t+"'\n\nThe condition should contain 'Cu' if it is the pCup promoter or 'Gal' if it is the GAL promoter. If this experiment involved a plasmid with a pCup promoter, but was plated on media without copper, your input should be '0Cu'.\n\nMultiple conditions should be separated with commas.\n\nChemical formulas with numbers should not be used (i.e. 100uM CuSO4 should be entered as 100uM Cu).\n");return guessConditionInfo(e,d)}var EXP_INFO;$(document).ready(function(){$("#store_params_batch_date").datepicker(),$("select[name^=store_params\\[]").each(function(){$(this).find("option:first").prop("disabled","disabled")}),$("#rothstein_sdl_head").click(function(){showHideDiv($(this))}),$("#store").click(function(){toggle_disable($(this))})});var ProcessResponse=function(){var e,t,i,n={};return function(o){o||(o={}),e=o.numRequest||0,t=o.requestsCompleted||0,i=[];var a=function(){for(var e=0;e<i.length;e++)i[e](n)};o.singleCallback&&i.push(o.singleCallback),this.addCallbackToQueue=function(n,o){n&&t++,o&&i.push(o),t==e&&a()},this.requestComplete=function(i){i&&t++,t==e&&a()},this.setCallback=function(){i.push(callBack)},this.setData=function(e,t){n[e]=t}}}();