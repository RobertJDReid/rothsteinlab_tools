function checkHeader(e,t,a){tempMissing=new Array;for(var o=1,r=0;r<e.length;r++)$.inArray(e[r],t)<0&&(tempMissing.push(e[r]),o=!1);return tempMissing.length<a.length&&(a=tempMissing),a}function validateQueryConditionPlates(e,t,a,o,r){var i="",l={},n=0;return $.each(e,function(e,s){count=s.counter,n+=1,$.inArray(count,r)<0&&(i+="<tr><td>"+o+"</td><td>Error parsing this file - bad plate density ("+count+") found for Query:"+t+", Condition: "+a+" on plate # "+e,i+="</td></tr>"),l[count]=1}),densities=Object.keys(l),densities.length>1&&(i+="<tr><td>"+o+"</td><td>Error parsing this file - non-consistant plate density found - densities found: ",i+=densities.join(", ")+"</td></tr>"),{errorMsg:i,density:densities,number_of_plates:n}}function buildData(e){var t=1,a=function(e,t,a){return"<input type='hidden' name='"+t+"["+e+"]' value ='"+a+"'/>"},o=function(e,t,a){return"<textarea  name='"+t+"["+e+"]'>"+a+"</textarea>"},r=document.createElement("form"),i=$("#query"+e).html().trim(),l=a(t,"query",i),n=$("#condition"+e).html().trim();l+=a(t,"condition",n);var s=$("#replicates"+e).html().trim();return l+=a(t,"replicates",s),l+=a(t,"density",$("#density"+e).html().trim()*s),l+=a(t,"batch_date",$("#batch_date"+e+" span").html().trim()),l+=a(t,"library",$("#library_used"+e+" :selected").text().trim()),l+=a(t,"donor",$("#donorFor"+e+" :selected").text().trim()),l+=a(t,"screen_purpose",$("#purpose"+e+" :selected").text().trim()),l+=o(t,"comments",$("#comments"+e).val().trim()),l+=a(t,"screenedBy",$("#user"+e).html().trim()),l+=$("#mQueryLookup"+e).length>0?a(t,"queryPWJ",$("#mQueryLookup"+e+" :selected").text().trim()):a(t,"queryPWJ",$("#queryLookup"+e+" .queryPWJ").html().trim()),l+=a(t,"comparerPWJ",$("#comparerUsed"+e+" :selected").text().trim()),l+=a(t,"incubation_temperature",$("#incubationTemp"+e+" :selected").val().trim()),l+=a(t,"rowNum",e),l+=o(t,"allData",$("#allData"+e).html()),$(r).append(l),{form:r,setInfo:i+" - "+n}}function checkIfExistsInDatabase(e,t,a){var o={condition:$("#condition"+t).html(),query:e,plasmidData:$("#queryLookup"+t).html()};o.density=$("#density"+t).html(),o.replicates=$("#replicates"+t).html(),o.number_of_plates=$("#plates"+t).html(),o.rowNum=t,o.batch_date=$("#batch_date"+t+" span").html(),function(e,t,a){var o='<img src="/tools/assets/progress_small.gif" alt="spinner" name="spinner" />';$.ajax({type:"GET",url:"check_if_experiment_exists",data:{query:t.query,condition:t.condition},dataType:"json",beforeSend:function(){$("#existsInDB"+e).html(o)},success:function(o){if(o.hasOwnProperty("comments")&&o.comments.match(/not found/i))$("#existsInDB"+e).html('<img src="/tools/assets/no.png"/>'),$("#uploadTD"+e).html(uploadButton(e)+'<textarea class="allData" id="allData'+e+'" name="allData['+e+']">'+JSON.stringify(a)+"</textarea>"),$("#uploadTD"+e).removeClass("badData");else{$("#existsInDB"+e).html('<img src="/tools/assets/yes.png"/>');for(var r=0;r<o.length;r++){var i=compareOldToNewJSON("query",t,o[r],e);i+=compareOldToNewJSON("condition",t,o[r],e);var l=o[r].comparer;eC=$("#comparerUsed"+e+" option:selected").text()==l?"match":"",i+="<td class='dupComparer"+e+" "+eC+"'>"+l+"</td>";var n=o[r].density/o[r].replicates;if(eC=n==t.density?"match":"",i+="<td class='dupDensity"+e+" "+eC+"'>"+n+"</td>",i+=compareOldToNewJSON("replicates",t,o[r],e),i+=compareOldToNewJSON("number_of_plates",t,o[r],e),i+=compareOldToNewJSON("batch_date",{batch_date:$("#batch_date"+e+" span").html()},o[r],e),i+=compareOldToNewJSON("library_used",{library_used:$("#library_used"+e+" option:selected").text()},o[r],e),i+=compareOldToNewJSON("donor_strain_used",{donor_strain_used:$("#donorFor"+e+" option:selected").text()},o[r],e),i+=compareOldToNewJSON("screen_purpose",{screen_purpose:$("#purpose"+e+" option:selected").text()},o[r],e),i+=compareOldToNewJSON("performed_by",{performed_by:$("#user"+e).html()},o[r],e),i+="<td>"+o[r].comments+"</td>",i+="</tr>",ec=0==$("#dupTable"+e+" tr").length%2?"":'class="alt"',$("#dupTable"+e).length>0)$("#dupTable"+e+" tbody").append("<tr "+ec+">"+i);else{var s='<tr id="dupRow'+e+'" class="toggleRow"><td class="toggleTD" colspan="17">';s+='<div class="toggleRowDiv" id="dupTable'+e+'"><table class="exp ui-widget dupDataTable">',s+='<thead class="ui-widget-header">',s+="	<tr>",s+="		<th>Upload?</th>",s+="		<th>Query</th>",s+="		<th>Condition</th>",s+="		<th>Comparer</th>",s+="		<th>Strains / Plates</th>",s+="		<th># Replicates</th>",s+="		<th># Plates</th>",s+='		<th class="nowrap">',s+="			Batch Date",s+='			<span class="question" id="badBatchDate'+e+'" title="This is the date that this screen was performed. For consistancy, it should corrispond to the date the mating was performed.">?</span>',s+="		</th>",s+="		<th>Library Used</th>",s+="		<th>Donor Strain Used</th>",s+="		<th>Screen Purpose</th>",s+="		<th>Screened By</th>",s+="		<th>Comments</th>",s+="	</tr>",s+="</thead>",s+='<tbody class="ui-widget-content">',s+="<tr class='alt'><td rowspan='"+o.length+"'>Upload <div class='nowrap;'>Anyway? <input type='checkbox' name='uploadAnyway' value='"+e+"' onchange='updateGoodTable(this, "+e+");' style='display:inline;' /><br/><small class='toggleLink' onclick='toggleDupRows("+e+");'><em>Hide</em></small></div></td>",s+=i,s+="</tbody>",s+="</table></div></td></tr>",$("#uploadTD"+e).parent().after(s),$(function(){for(var t=$("#uploadTD"+e).parent();!t.children(":first").hasClass("fileNameRow")&&t.is("tr");)t=t.prev();t.children(":first").prop("rowspan",parseInt(t.children(":first").prop("rowspan"))+1)}),$("#dupTable"+e+" .question").each(function(){var e=$(this).prop("id");$("#"+e).tooltip({track:!0,fade:250,delay:0})})}}$("#uploadTD"+e).html('<span class="badData toggleLink">Dups - click to view</span><textarea id="allData'+e+'" name="allData['+e+']" class="allData">'+JSON.stringify(a)+"</textarea>"),$("#uploadTD"+e).addClass("badData"),$("#uploadTD"+e+" span").click(function(){toggleDupRows(e)}),$("#library_used"+e).change(function(){var t=$(this).find(":selected").text();$(".duplibrary_used"+e).each(function(){$(this).removeClass("match"),$(this).html()==t&&$(this).addClass("match")})}),$("#donorFor"+e).change(function(){var t=$(this).find(":selected").text();$(".dupdonor_strain_used"+e).each(function(){$(this).removeClass("match"),$(this).html()==t&&$(this).addClass("match")})}),$("#purpose"+e).change(function(){var t=$(this).find(":selected").text();$(".dupscreen_purpose"+e).each(function(){$(this).removeClass("match"),$(this).html()==t&&$(this).addClass("match")})}),$("#comparerUsed"+e).change(function(){var t=$(this).find(":selected").text();$(".dupComparer"+e).each(function(){$(this).removeClass("match"),$(this).html()==t&&$(this).addClass("match")})})}},error:function(){$("#existsInDB"+e).html("Database error looking for dups.")}})}(t,o,a)}function drFileOnLoadHandler(e,t,a){function o(){f+T>r.fileLength&&(T=r.fileLength-f);for(var e=0;T>e;e++){var t=$.map(r.fileArr[f].split(/\t/),$.trim);if(void 0===t[u.row]||""==t[u.row])return appendFileErrorClearTimerCallBack("<tr><td>"+r.fileName+"</td><td>Could not find a valid 'row'  value on line #"+(f+1)+"</td></tr>",x,a);var o=t[u.row].toUpperCase();if(void 0===t[u.column]||""==t[u.column])return appendFileErrorClearTimerCallBack("<tr><td>"+r.fileName+"</td><td>Could not find a valid 'column'  value on line #"+(f+1)+"</td></tr>",x,a);var i=t[u.column];if(void 0===t[u["plate #"]]||""==t[u["plate #"]])return appendFileErrorClearTimerCallBack("<tr><td>"+r.fileName+"</td><td>Could not find a valid 'plate'  value on line #"+(f+1)+"</td></tr>",x,a);var l=t[u["plate #"]].toUpperCase();if(void 0===t[u.query]||""==t[u.query])return appendFileErrorClearTimerCallBack("<tr><td>"+r.fileName+"</td><td>Could not find a valid 'query'  value on line #"+(f+1)+"</td></tr>",x,a);var n=t[u.query],s=t[u.condition];s||0===s||(s="");for(var d=[],p=0;p<m.length;p++)d.push(t[m[p]]);void 0===D.data[n]?(D.data[n]={},D.data[n][s]={},D.data[n][s].fileName=r.fileName,D.data[n][s].query=n,D.data[n][s].condition=s,D.data[n][s].extraCols=h,D.data[n][s].plates={},D.data[n][s].plates[l]={},D.data[n][s].plates[l].counter=0,D.data[n][s].plates[l].rows={},D.data[n][s].plates[l].rows[o]={}):void 0===D.data[n][s]?(D.data[n][s]={},D.data[n][s].fileName=r.fileName,D.data[n][s].query=n,D.data[n][s].condition=s,D.data[n][s].extraCols=h,D.data[n][s].plates={},D.data[n][s].plates[l]={},D.data[n][s].plates[l].counter=0,D.data[n][s].plates[l].rows={},D.data[n][s].plates[l].rows[o]={}):void 0===D.data[n][s].plates[l]?(D.data[n][s].plates[l]={},D.data[n][s].plates[l].counter=0,D.data[n][s].plates[l].rows={},D.data[n][s].plates[l].rows[o]={}):void 0===D.data[n][s].plates[l].rows[o]&&(D.data[n][s].plates[l].rows[o]={}),D.data[n][s].plates[l].counter++,D.data[n][s].plates[l].rows[o][i]=d,++f}updateProgress(f,r.fileLength),f>=r.fileLength&&(clearInterval(x),r.fileArr=[],r.numberReplicates=b,processMillFileDataForDisplay(D,r,a))}var r=commonFileProcessProcedures(e,t);r.comments="";for(var i=["plate #","row","column","id column","condition","query"],l=!1,n=i,s="",d=0,p=new Array,c=100>r.fileArr.length?r.fileArr.length-1:100;!l;){if(d>c)return r.fileErrors.append('<li class="fileFail">Did not process '+r.fileName+" - could not locate the following columns in this file:<ul><li>"+n.join("</li><li>")+"</li></ul></li>"),a();p=$.map(r.fileArr[d].toLowerCase().split(/\t/),$.trim),n=checkHeader(i,p,n),n.length<1?l=!0:r.comments+=r.fileArr[d]+"\n",!l&&"undefined"!=typeof p&&p.length<1&&(s=s+" "+r.fileArr[d].trim+"\n"),d++}for(var u=[],m=[],h=[],f=0;f<p.length;f++)u[p[f]]=f,$.inArray(p[f],i)<0&&(h.push(p[f]),m.push(f));m.push(u["id column"]),h.push("id column");for(var v=[],g=0;g<p.length;g++)$.inArray(p[g],u)>=0?v.push(p[g]):u[p[g]]=g;if(v.length>0)return r.fileErrors.append('<li class="fileFail">Did not process '+r.fileName+" - duplicate column headers found in ScreenMillStats-All data file:<ul><li>"+v.join("</li><li>")+"</li></ul></li>"),a();var b=0,y=/normalized colony size/i;for(col in u)y.test(col)&&b++;if($.inArray(b,repPossibilities)<0)return r.fileErrors.append("<li class='fileFail'>Did not process "+r.fileName+" - unsupported number of replicates found ("+b+"). Supported values are 1, 2, 4 and 16. The number of 'normalized colony size' columns is used to determine the number of replicates.</li>"),a();var C="",w="";if(void 0!==u["log growth ratio"]?w=u["log growth ratio"]:void 0!==u["calculated log ratio (comparer::exp)"]?w=u["calculated log ratio (comparer::exp)"]:void 0!==u["calculated log ratio (control::exp)"]&&(w=u["calculated log ratio (control::exp)"]),""==w&&(w=void 0,C+="<li>Log Growth Ratio</li>"),normGrowthRatioCol=void 0,void 0!==u["growth ratio (comparer / exp)"]?normGrowthRatioCol=u["growth ratio (comparer / exp)"]:void 0!==u.ratio&&(normGrowthRatioCol=u.ratio),(void 0===normGrowthRatioCol||0>normGrowthRatioCol&&normGrowthRatioCol!=w)&&(C+="<li>Growth Ratio (Comparer / Exp)</li>"),normRatioCol=void 0,void 0!==u["normalized growth ratio (comparer::exp)"]?normRatioCol=u["normalized growth ratio (comparer::exp)"]:void 0!==u["normalized ratio (comparer::exp)"]?normRatioCol=u["normalized ratio (comparer::exp)"]:void 0!==u["normalized ratio (control::exp)"]&&(normRatioCol=u["normalized ratio (control::exp)"]),(void 0===normRatioCol||0>normRatioCol)&&(C+="<li>Normalized Growth Ratio (Comparer::Exp)</li>"),pValueCol=void 0,void 0!==u["p-value"]?pValueCol=u["p-value"]:void 0!==u["t-test p-value"]?pValueCol=u["t-test p-value"]:void 0!==u["mann-whitney probability"]?pValueCol=u["mann-whitney probability"]:C+="<li>P-Value, T-Test P-Value or Mann-Whitney Probability</li>",zScoreCol=u["z-score"],(void 0!==zScoreCol||0>zScoreCol)&&(void 0!==u["t-test p-value"]&&void 0!==u["mann-whitney probability"]?C+="<li>Z-Score</li>":zScoreCol=2*u.length),""!=C)return C="<li class='fileFail'>Did not process "+r.fileName+" - could not find the following column(s) in the file:<ul>"+C,C+="</ul>",r.fileErrors.append(C),a();var D={};D.data={},trimFile(r);var f=d;r.fileLength=r.fileLength-d;var T=calculateChunksize(r,a);if(!T)return!1;r.fileLength=r.fileLength+d;var x;return x=setInterval(o,0),!0}function appendFileErrorClearTimerCallBack(e,t,a){return clearInterval(t),$("#badFileTable").append(e),a(),!1}function processMillFileDataForDisplay(e,t,a){var o=1,r=$("#goodFileTable tr.goodRow").size(),l=Object.keys(e.data);l.sort();var n="";for(i=0;i<l.length;i++){var s=Object.keys(e.data[l[i]]);for(s.sort(),j=0;j<s.length;j++){var d=r+o,p="rowNum"+d,c="",u=guessConditionInfo(l[i],s[j],t.fileName);i==l.length-1&&j==s.length-1&&(p+=" bottomRow"),c+='<td class="'+p+'">'+d+'</td><td class="'+p+'" id="query'+d+'">'+l[i]+"</td>",c+=0==u?'<td class="badParam '+p+'" id="condition'+d+'">could not determine</td>':'<td class="'+p+'" id="condition'+d+'">'+u+"</td>";var m=validateQueryConditionPlates(e.data[l[i]][s[j]].plates,l[i],u,t.fileName,densityPossibilities);if(""!==m.errorMsg)if($("#badFileTable").append(m.errorMsg),o++,c+='<td class="queryLookup badData" id="queryLookup'+d+'">Error - see above</td>',c+='<td class="badData">Error</td><td class="badData">Error</td><td class="badData">Error</td><td class="badData">Error</td>',c+='<td class="badData">Error</td><td class="badData">Error</td><td class="badData">Error</td><td class="badData">Error</td>',c+='<td class="badData">Error</td><td class="badData">Error</td><td class="badData">Error</td><td class="badData">Error</td><td class="badData">Error</td>',$("#"+t.id).length>0)$('<tr class="goodRow">'+c+"</tr>").appendTo("#goodFileTable");else{var h='<tr class="goodRow"><td id="'+t.id+'" class="fileNameRow '+p+'"  title="'+t.fileName+'" rowspan="'+(o-1)+'"><strong>'+t.fileName+"</strong>";h+="<br/>Size:"+t.size+" KB - Last Modified: "+t.lastMod+"</td>"+c+"</tr>",$(h).appendTo("#goodFileTable")}else{if(o++,c+='<td class="queryLookup '+p+'" id="queryLookup'+d+'"></td>',c+='<td class="comparerLookup '+p+'" id="comparerLookup'+d+'">',c+='<select id = "comparerUsed'+d+'" name="comparerUsed" class="hundred row'+d+'Option">',c+=comparerOptions+"</select></td>",c+='<td class="'+p+'" id="density'+d+'">'+m.density[0]+"</td>",c+='<td class="'+p+'" id="replicates'+d+'">'+t.numberReplicates+"</td>",c+='<td class="'+p+'" id="plates'+d+'">'+m.number_of_plates+"</td>",c+='<td class="'+p+'" id="batch_date'+d+'"><span>'+t.batchDate+'</span> <input type="hidden" title="'+d+'" id="datepicker'+d+'" /> </td>',c+='<td class="'+p+'"><select id = "library_used'+d+'" name="library_used" class="one50px row'+d+'Option">',c+=libraryOptions,c+="</select></td>",c+='<td class="'+p+'"><select id="incubationTemp'+d+'" name="incubationTemp" class="row'+d+'Option">',c+='<option value="15">15&deg;C</option><option value="16">16&deg;C</option><option value="17">17&deg;C</option><option value="18">18&deg;C</option><option value="19">19&deg;C</option><option value="20">20&deg;C</option><option value="21">21&deg;C</option><option value="22">22&deg;C</option><option value="23">23&deg;C</option><option value="24">24&deg;C</option><option value="25">25&deg;C</option><option value="26">26&deg;C</option><option value="27">27&deg;C</option><option value="28">28&deg;C</option><option value="29">29&deg;C</option><option value="30" selected="selected">30&deg;C</option><option value="31">31&deg;C</option><option value="32">32&deg;C</option><option value="33">33&deg;C</option><option value="34">34&deg;C</option><option value="35">35&deg;C</option><option value="36">36&deg;C</option><option value="37">37&deg;C</option><option value="38">38&deg;C</option><option value="39">39&deg;C</option><option value="40">40&deg;C</option><option value="41">41&deg;C</option></select>',c+="</td>",c+='<td class="'+p+'"><select id = "donorFor'+d+'" name="donor" class="row'+d+'Option">',c+=donorSelection,c+="</select></td>",c+='<td class="'+p+'"><select id="purpose'+d+'" name="screen_purpose" class="row'+d+'Option">',c+=screenPurposeOptions,c+="</select></td>",c+='<td class="'+p+'" id="commentsTD'+d+'"><button class="modifyComment row'+d+'Option" id="commentButton'+d+'">Click me</button><textarea id="comments'+d+'" class="hidden">'+t.comments+"</textarea></td>",c+='<td class="'+p+'" id="user'+d+'">'+currentUser+"</td>",c+='<td class="'+p+'" id="existsInDB'+d+'"></td>',c+='<td class="'+p+'" id="uploadTD'+d+'"></td>',$("#"+t.id).length>0)$('<tr class="goodRow">'+c+"</tr>").appendTo("#goodFileTable");else{var h='<tr class="goodRow"><td id="'+t.id+'" class="fileNameRow '+p+'"  title="'+t.fileName+'" rowspan="'+(o-1)+'"><strong>'+t.fileName+"</strong>";h+="<br/>Size:"+t.size+" KB - Last Modified: "+t.lastMod+"</td>"+c+"</tr>",$(h).appendTo("#goodFileTable")}$("#commentButton"+d).button().click(function(){$("#comment-form").data("opener",$(this).next()).dialog("open")}),addDateSelect(d),function(e,t,a,o){var r='<img src="/tools/assets/progress_small.gif" alt="spinner" name="spinner" />';$.ajax({type:"GET",url:"verify_query",data:{query:a,condition:o},dataType:"json",beforeSend:function(){$("#queryLookup"+e).html(r)},success:function(a){var o=function(){var a=$("#mQueryLookup"+e).find(":selected").val();checkIfExistsInDatabase(a,e,t)},r=processQueryData(a,e,t,o);r&&checkIfExistsInDatabase(r,e,t)},error:function(){$("#queryLookup"+e).html("Database Error"),$("#queryLookup"+e).addClass("badData"),alert("Incurred an error while attempting to validate query: "+a+", condition: "+o)}})}(d,e.data[l[i]][s[j]],l[i],u)}}}return $("#percent").html("Loading Done! 100%"),setTimeout("$('#progress_bar').prop('class', '');",1e3),o>0&&$("#"+t.id).prop("rowspan",o-1),""!==n?($("#badFileTable").append(n),a(),!1):(a(),void 0)}var script="/tools/cgi-bin/experiments/uploadScreenMillFile.cgi";$(document).ready(function(){$("#dataUpload").validate({submitHandler:function(e){$(".submitDiv .loading").show(),$(".submitDiv .spinner").show(),$(e).submit()}})}),$(function(){function e(e,a,o,r){return e.val().length>r||e.val().length<o?(e.addClass("ui-state-error"),t("Length of "+a+" must be between "+o+" and "+r+"."),!1):!0}function t(e){tips.text(e).addClass("ui-state-highlight"),setTimeout(function(){tips.removeClass("ui-state-highlight",1500)},500)}tips=$(".validateTips"),$("#comment-form").dialog({autoOpen:!1,height:400,width:750,modal:!0,position:{my:"center",at:"center",of:window},buttons:{"Update comments":function(){var t=!0;el=$("#comments"),el.removeClass("ui-state-error"),t=t&&e(el,"comments",3,5e4),t&&($("#comment-form").data("opener").val(el.val()),$(this).dialog("close"))},Cancel:function(){$(this).dialog("close")}},close:function(){$("#comments").val("").removeClass("ui-state-error")},open:function(){$("#comments").val($("#comment-form").data("opener").val())}})});