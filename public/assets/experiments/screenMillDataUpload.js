function onLoadStartHandler(){$("#fileErrors").css("visibility","hidden");var e=$("#percent");e.css("width","0%"),e.html="Loading Files: 0%",$("#progress_bar").attr("class","fileLoading"),$("#progress_bar2").css("display","block"),$("#progress_bar2").attr("class","fileLoading")}function handleDragOver(e){e.stopPropagation(),e.preventDefault(),e.dataTransfer.dropEffect="copy",e.target.className="dragover"==e.type?"hover":""}function updateProgress(e){var t=$("#percent");if(e.lengthComputable){var a=Math.round(100*(e.loaded/e.total));100>a&&(t.css("width",a+"%"),t.html("Loading Files: "+a+"%"))}}function onAbortHandler(){alert("File read canceled.")}function onErrorHandler(e){switch(e.target.error.code){case e.target.error.NOT_FOUND_ERR:alert("File Not Found!");break;case e.target.error.SECURITY_ERR:alert("File security error.");break;case e.target.error.ABORT_ERR:break;case e.target.error.NOT_READABLE_ERR:alert("File is not readable.");break;case e.target.error.ENCODING_ERR:alert("File encoding error.");break;default:alert("An error occurred reading the file.")}}function onLoadEndHandler(){processedCount++,$("#percent2").html("Processing File "+processedCount+" of "+totalFiles+"...");var e=Math.round(100*(processedCount/totalFiles));if($("#percent2").css("width",e+"%"),processedCount==totalFiles){var t=$("#fileErrors .fileFail").size();t>0?($("#numErrors").html(t),$("#fileErrors").css("visibility","visible")):$("#fileErrors").css("visibility","hidden"),$("#badFileTable td").size()>0?$("#badFiles").css("display","block"):$("#badFiles").css("display","none"),$("#goodFileTable td").size()>0?$("#goodFiles").css("display","block"):$("#goodFiles").css("display","none"),$("#main #badFileTable tr:even").addClass("alt"),$("#main #goodFileTable .goodRow:even td:not(.success):not(.badData):not(.fileNameRow)").addClass("alt"),$("#main #goodFileTable .goodRow .fileNameRow:even").addClass("alt"),processedCount=0,$("#progress_bar").attr("class",""),$("#progress_bar2").css("display","none")}else processFile(files[processedCount])}function handleFileSelect(e){start=(new Date).getTime(),handleDragOver(e),$("#badFileTable").find("tr:gt(0)").remove(),$("#fileErrorDetails").html(""),fileErrors=$("#fileErrorDetails"),e.stopPropagation(),e.preventDefault(),files=e.dataTransfer?e.dataTransfer.files:e.target.files,totalFiles=files.length,processFile(files[0])}function processFile(e){var t=escape(e.name),a=e.type||"n/a",r=/text\/plain/;if(!e.type.match(r))return fileErrors.append("<li class='fileFail'>Did not process "+e.name+" because it's not a text/plain file (i.e. does <em>not</em> have a .txt file extension). Found a file type of '"+a+"'.</li>"),onLoadEndHandler();var o=(e.size/1024).toFixed(2),n=e.lastModifiedDate?e.lastModifiedDate.toLocaleDateString():"n/a",i=t+o+n+a;if(i=i.replace(/[^\w]/g,""),$("#"+i).length>0)return fileErrors.append("<li class='fileFail'>Did not process "+e.name+" as you have already selected a file of the same name and size to upload.</li>"),onLoadEndHandler();if(o>51200)return fileErrors.append("<li class='fileFail'>Did not process "+e.name+" because it is too big ("+o+"KB). The max file upload size is 50MB.</li>"),onLoadEndHandler();var s=new FileReader;s.onerror=onErrorHandler,s.onabort=onAbortHandler,s.onloadstart=onLoadStartHandler,s.onload=function(e){return function(){onLoadHandler(this,e,function(){onLoadEndHandler()})}}(e),s.readAsText(e)}function checkDate(e){var t=/(^\d{1,2}[\/|\-|\.|_]\d{1,2}[\/|\-|\.|_](?:\d{2}|\d{4}))/,a=/(^(?:\d{2}|\d{4})[\/|\-|\.|_]\d{1,2}[\/|\-|\.|_]\d{1,2})/,r=function(e,t,a,r,o){var n=t.exec(e);if(null==n)return!1;e=n[0],e=e.replace(/[\/|\.|_]/g,"-"),temp=e.split("-");var i=temp[a],s=temp[o],l=temp[r],d=new Date(l,i-1,s);return d.getMonth()+1!=i||d.getDate()!=s||d.getFullYear()!=l?!1:e},o=r(e,t,0,2,1);return o?o:r(e,a,1,0,2)}function commonFileProcessProcedures(e,t){var a=escape(t.name),r=checkDate(a);r=r?r:"?";var o={batchDate:r,size:(t.size/1024).toFixed(2),lastMod:t.lastModifiedDate?t.lastModifiedDate.toLocaleDateString():"n/a",fileErrors:$("#fileErrorDetails"),fileArr:e.result.split(/\r\n|\r|\n/g),fileName:t.name},n=t.type||"n/a",i=a+o.size+o.lastMod+n;return i=i.replace(/[^\w]/g,""),o.id=i,o.fileLength=o.fileArr.length,o}function trimFile(e){for(var t=e.fileLength-1;t>0;t--){var a=$.map(e.fileArr[t].split(/\t/),$.trim);a=$.grep(a,function(e){return e}),a.length<1?(e.fileArr.pop(),e.fileLength--):t=-1}}function updateProgress(e,t){var a=parseInt(100*(e/t))+"%";return $("#percent").css("width",a),$("#percent span").html(a),1}function checkProgressM(e,t){if(0==e%100){var a=parseInt(100*(e/t))+"%";$("#percent").css("width",a),$("#percent span").html(a)}return 1}function processQueryData(e,t,a,r){if("string"==typeof e||e instanceof String)return addPlasmidError("Could not locate this plasmid in the database! Cannot upload this data.",t),!1;if(e.length>1){for(var o=$("<select/>",{"class":"row"+t+"Option",id:"mQueryLookup"+t}),n="<option value='' disabled='disabled' selected='selected'>Select pWJ:</option>",i=0;i<e.length;i++)n+="<option value='"+e[i].number+"'>"+e[i].number+" = "+e[i].promoter+"-"+e[i].gene+"</option>";return o.append(n),addPlasmidError(o,t,"Select a query."),o.change(function(){""!=$(this).find(":selected").val()&&($(".row"+t+"Option").attr("disabled",!1),$("#uploadTD"+t).removeClass("badData"),$("#queryLookup"+t).removeClass("badData"),r())}),o.attr("disabled",!1),!1}if(void 0==e[0]||e[0].number.match(/not found/i))return addPlasmidError("Could not locate this plasmid in the database! Cannot upload this data.",t),!1;var s=parsePlasmidJSON(e[0]);return s.parentExists?($("#queryLookup"+t).html('Plasmid #: <span class="queryPWJ">'+s.pWJ+'</span>, Promoter: <span class="queryPromoter">'+s.promoter+'</span>, Gene: <span class="queryGene">'+s.gene+'</span>, Selection: <span class="querySelection">'+s.selection+"</span>"),$("#comparerUsed"+t).length>0&&$("#comparerUsed"+t).val(s.parent),s.pWJ):(addPlasmidError("Could not locate the parent ('"+s.parent+"') of this plasmid ('"+s.pWJ+"') in the database! Add it, then try again",t),!1)}function addPlasmidError(e,t,a){$("#queryLookup"+t).html(""),$("#queryLookup"+t).append(e),$("#queryLookup"+t).addClass("badData"),$("#existsInDB"+t).html("<img src=/tools/assets/exclamation-1b53c9e6670152dfa9b50f45e8b53dca.png/>"),a?$("#uploadTD"+t).html(a):$("#uploadTD"+t).html("Fix problems before uploading"),$("#uploadTD"+t).addClass("badData"),$(".row"+t+"Option").attr("disabled","disabled")}function parsePlasmidJSON(e){var t={pWJ:"",parent:"",promoter:"",selection:"",gene:""};return"string"==typeof e||e instanceof String?t.pWJ="Not found!":(t.pWJ=e.number,t.parent=e.parent,t.promoter=e.promoter,t.selection=e.yeast_selection,t.gene=e.gene,t.parentExists=e.parentExists),t}function guessConditionInfo(e,t,a){if(t||0==t||(t=""),t.match(/,/)){conditions=t.split(",");for(var r="",o=0;o<conditions.length;o++)r=r+", "+guessConditionInfo(e,conditions[o].trim(),a);var n=/^\s*,*\s*|\s*,*\s*$/;return r.replace(n,"")}if(void 0!==t&&null!=t){if(t.match(/^[0-9]{1,3}\s*cu$/i)){var i=t.match(/^([0-9]{1,3})\s*cu$/i);return i[1]+"uM Cu"}if(t.match(/^[0-9]{1,3}\s*um$/i)){var i=t.match(/^([0-9]{1,3})\s*um$/i);return i[1]+"uM Cu"}if(t.match(/^gal$/i))return"GAL";if(t.match(/^cu$/i))return"100uM Cu";var n=/^(\d+\.?\d*)(uM|nM|mM|dM|ug|mg|ng|dg|g|m)\s*([a-zA-Z]+)$/i,s=n.exec(t);if(null!=s){var i=s[1],l=s[2].length>1?s[2].charAt(0).toLowerCase()+s[2].toUpperCase().slice(1):s[2],d=s[3].length>1?s[3].charAt(0).toUpperCase()+s[3].toLowerCase().slice(1):s[3];return i+""+l+" "+d}}var p="";for(p=prompt("Could not determine the condition / plasmid promoter for the following experiment:\nFilename: "+a+"\nQuery: "+e+"\nCondition: '"+t+"'\n\nThe condition should contain 'Cu' if it is the pCup promoter or 'Gal' if it is the GAL promoter. If this experiment involved a plasmid with a pCup promoter, but was plated on media without copper, your input should be '0Cu'.\n\nMultiple conditions should be separated with commas.\n\nChemical formulas with numbers should not be used (i.e. 100uM CuSO4 should be entered as 100uM Cu).\n",t);!p&&0!==p;)p=prompt("Invalid input - this value cannot be blank!\n\nCould not determine the condition / plasmid promoter for the following experiment:\nFilename: "+a+"\nQuery: "+e+"\nCondition: '"+t+"'\n\nThe condition should contain 'Cu' if it is the pCup promoter or 'Gal' if it is the GAL promoter. If this experiment involved a plasmid with a pCup promoter, but was plated on media without copper, your input should be '0Cu'.\n\nMultiple conditions should be separated with commas.\n\nChemical formulas with numbers should not be used (i.e. 100uM CuSO4 should be entered as 100uM Cu).\n");return guessConditionInfo(e,p,a)}function addDateSelect(e){$(function(){$("#datepicker"+e).datepicker({showOn:"button",buttonImage:"/tools/assets/calendar.gif",buttonImageOnly:!0,dateFormat:"yy-mm-dd",onSelect:function(e){$(this).prev().html(e);var t=$(this).attr("title"),a=$(this).val();$(".dupdate"+t).each(function(){$(this).removeClass("match"),$(this).html()==a&&$(this).addClass("match")})}})})}function compareOldToNewJSON(e,t,a,r){var o=a[e]||"?",n=o==t[e]?"match":"noMatch";return"<td class='dup"+e+r+" "+n+"'>"+o+"</td>"}function uploadButton(e,t){return t="undefined"!=typeof t?"checked=checked":"",'<input type="checkbox" '+t+' name="uploadMe" class="uploadBox" onchange="checkUploadButtons()"; value="'+e+'" />'}function toggleDupRows(e){$("#dupTable"+e).slideToggle()}function calculateChunksize(e,t){var a=parseInt(e.fileLength/100);if(1>a){var r='<li class="fileFail">Did not process '+e.fileName+". The file is too small to process, only "+e.fileLength+" lines found.</li>";return e.fileErrors.append(r),t(),!1}return a}function updateGoodTable(e,t){$(e).prop("checked")?($("#uploadTD"+t+" span").html(uploadButton(t,!0)),$("#uploadTD"+t+" span").unbind("click"),$("#uploadTD"+t).removeClass("badData")):($("#uploadTD"+t+" span").html("Error - click to view"),$("#uploadTD"+t+" span").click(function(){toggleDupRows(t)}),$("#uploadTD"+t).addClass("badData")),checkUploadButtons()}$(document).ready(function(){var e=document.getElementById("drop_zone");e.addEventListener("dragover",handleDragOver,!1),e.addEventListener("dragleave",handleDragOver,!1),e.addEventListener("drop",handleFileSelect,!1),$("span.question").each(function(){var e=$(this).prop("id");$("#"+e).tooltip({track:!0,fade:250,delay:0})})}),window.File&&window.FileReader&&window.FileList&&window.Blob||alert("The File APIs are not fully supported in this browser.");var processedCount=0,totalFiles=0,files;